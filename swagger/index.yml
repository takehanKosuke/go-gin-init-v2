openapi: 3.0.0
info:
  title: ここにはアプリのタイトルを入れます
  version: 1.0.0
  description: ここにはアプリの説明文が入ります
servers:
  - url: 'http://localhost:8080/'
    description: ローカルサーバ
paths:
  /todos:
    get:
      summary: todo一覧を表示する
      description: ここはAPIの詳細を書きます
      operationId: V1GetTodoAll
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Todo'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'
      tags:
        - todo
    post:
      summary: todoを新規作成する
      description: ここはAPIの詳細を書きます
      operationId: V1CreateTodo
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                text:
                  type: string
                status:
                  type: integer
                  enum:
                    - yet
                    - doing
                    - done
              required:
                - text
        description: ''
      responses:
        '200':
          description: 特定のtodoを返します
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'
      tags:
        - todo
    parameters: []
  '/todos/{id}':
    get:
      summary: idで特定のtodoを返します
      description: ここはAPIの詳細を書きます
      operationId: v1GetTodoById
      parameters:
        - name: id
          in: path
          description: User ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  '':
                    $ref: '#/components/schemas/Todo'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'
      tags:
        - todo
    put:
      summary: todoの更新
      description: ここはAPIの詳細を書きます
      operationId: V1UpdateTodo
      parameters:
        - name: id
          in: path
          description: User ID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: integer
                  enum:
                    - yet
                    - doing
                    - done
                text:
                  type: string
        description: ''
      responses:
        '201':
          description: Created
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'
      tags:
        - todo
    delete:
      summary: todoの削除
      description: ここはAPIの詳細を書きます
      operationId: v1DeleteTodo
      parameters:
        - name: id
          in: path
          description: User ID
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'
      tags:
        - todo
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
components:
  responses:
    BadRequest:
      description: BadRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    InternalServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
  schemas:
    Error:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
      required:
        - code
        - message
    Todo:
      title: Todo
      type: object
      properties:
        id:
          type: string
        status:
          type: integer
          enum:
            - yet
            - doing
            - done
        text:
          type: string
      required:
        - id
        - status
