// Code generated by MockGen. DO NOT EDIT.
// Source: todo.go

// Package mock_infrastructure is a generated GoMock package.
package mock_infrastructure

import (
	model "go-gin-init-v2/app/model"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockTodo is a mock of Todo interface.
type MockTodo struct {
	ctrl     *gomock.Controller
	recorder *MockTodoMockRecorder
}

// MockTodoMockRecorder is the mock recorder for MockTodo.
type MockTodoMockRecorder struct {
	mock *MockTodo
}

// NewMockTodo creates a new mock instance.
func NewMockTodo(ctrl *gomock.Controller) *MockTodo {
	mock := &MockTodo{ctrl: ctrl}
	mock.recorder = &MockTodoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTodo) EXPECT() *MockTodoMockRecorder {
	return m.recorder
}

// Delete mocks base method.
func (m *MockTodo) Delete() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Delete")
}

// Delete indicates an expected call of Delete.
func (mr *MockTodoMockRecorder) Delete() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockTodo)(nil).Delete))
}

// GetAll mocks base method.
func (m *MockTodo) GetAll() []*model.Todo {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAll")
	ret0, _ := ret[0].([]*model.Todo)
	return ret0
}

// GetAll indicates an expected call of GetAll.
func (mr *MockTodoMockRecorder) GetAll() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAll", reflect.TypeOf((*MockTodo)(nil).GetAll))
}

// GetById mocks base method.
func (m *MockTodo) GetById(id int) *model.Todo {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetById", id)
	ret0, _ := ret[0].(*model.Todo)
	return ret0
}

// GetById indicates an expected call of GetById.
func (mr *MockTodoMockRecorder) GetById(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetById", reflect.TypeOf((*MockTodo)(nil).GetById), id)
}

// Post mocks base method.
func (m *MockTodo) Post(todo model.Todo) *model.Todo {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Post", todo)
	ret0, _ := ret[0].(*model.Todo)
	return ret0
}

// Post indicates an expected call of Post.
func (mr *MockTodoMockRecorder) Post(todo interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Post", reflect.TypeOf((*MockTodo)(nil).Post), todo)
}

// Update mocks base method.
func (m *MockTodo) Update(todo model.Todo) *model.Todo {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Update", todo)
	ret0, _ := ret[0].(*model.Todo)
	return ret0
}

// Update indicates an expected call of Update.
func (mr *MockTodoMockRecorder) Update(todo interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockTodo)(nil).Update), todo)
}
